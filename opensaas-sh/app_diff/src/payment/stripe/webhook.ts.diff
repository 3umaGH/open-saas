--- template/app/src/payment/stripe/webhook.ts
+++ opensaas-sh/app/src/payment/stripe/webhook.ts
@@ -1,5 +1,5 @@
 import { type MiddlewareConfigFn, HttpError } from 'wasp/server';
-import { type PaymentsWebhook } from 'wasp/server/api';
+import { type StripeWebhook } from 'wasp/server/api';
 import { type PrismaClient } from '@prisma/client';
 import express from 'express';
 import { Stripe } from 'stripe';
@@ -11,7 +11,7 @@
 import { requireNodeEnvVar } from '../../server/utils';
 import { z } from 'zod';
 
-export const stripeWebhook: PaymentsWebhook = async (request, response, context) => {
+export const stripeWebhook: StripeWebhook = async (request, response, context) => {
   const secret = requireNodeEnvVar('STRIPE_WEBHOOK_SECRET');
   const sig = request.headers['stripe-signature'];
   if (!sig) {
@@ -86,7 +86,7 @@
   const lineItemPriceId = result.data.data[0].price.id;
 
   const planId = Object.values(PaymentPlanId).find(
-    (planId) => paymentPlans[planId].getPaymentProcessorPlanId() === lineItemPriceId
+    (planId) => paymentPlans[planId].getPaymentProcessorPlanId('stripe') === lineItemPriceId
   );
   if (!planId) {
     throw new Error(`No plan with stripe price id ${lineItemPriceId}`);
